tosca_definitions_version: yorc_tosca_simple_yaml_1_0

metadata:
  template_name: yorc-aws-types
  template_author: yorc
  template_version: 1.2.0

imports:
  - yorc: <yorc-types.yml>

data_types:
  yorc.datatypes.aws.SubnetType:
    derived_from: tosca.datatypes.Root
    # See : https://www.terraform.io/docs/providers/aws/r/subnet.html
    properties:
      availability_zone:
        type: string
        required: false
        description: The AZ for the subnet
      availability_zone_id:
        type: string
        required: false
        description: The AZ ID for the subnet
      cidr_block:
        type: string
        required: true
      ipv6_cidr_block :
        type: string
        required: false
        description: The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.
      map_public_ip_on_launch:
        type: boolean
        required: false
        description: Specify true to indicate that instances launched into the subnet should be assigned a public IP address. 
      assign_ipv6_address_on_creation:
        type: boolean
        required: false
        description: >
          Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address
      tags:
        type: map
        description: A mapping of tags to assign to the resource.
        required: false
        entry_schema:
          type: string

  yorc.datatypes.aws.SecurityRuleType:
    derived_from: tosca.datatypes.Root
    # See : https://www.terraform.io/docs/providers/aws/r/subnet.html
    properties:
      from_port:
        type: string
        required: true
      to_port:
        type: string
        required: true
      protocol:
        type: string
        required: true

  yorc.datatypes.aws.SecurityGroupType:
    derived_from: tosca.datatypes.Root
    # See : https://www.terraform.io/docs/providers/aws/r/subnet.html
    properties:
      name:
        type: string
        required: true
      ingress:
        type: yorc.datatypes.aws.SecurityRuleType
        required: true
      egress:
        type: yorc.datatypes.aws.SecurityRuleType
        required: true

node_types:
  yorc.nodes.aws.Compute:
    derived_from: yorc.nodes.Compute
    properties:
      image_id:
        type: string
        description: AMI (Amazon Machine Image) ID
        required: true
      instance_type:
        type: string
        description: AWS type representing Amazon flavor (combination of CPU, memory, storage, and networking capacity, for example t2.micro)
        required: true
      key_name:
        type: string
        description: >
          AWS Key Pair name to use when creating this Compute
        required: true
      security_groups:
        type: string
        description: >
          Comma-separated list of security groups to add to the Compute
        required: false
      subnet_id:
        type: string
        description: >
          The VPC Subnet ID to launch in.
        required: false
      availability_zone:
        type: string
        required: false
        description: AWS Availability zone on which to create the instance
      placement_group:
        type: string
        required: false
        description: AWS Placement Group on which to add the instance
      elastic_ips:
        type: string
        description: Comma-separated list of Elastic IPs to use
        required: false
      delete_volume_on_termination:
        type: boolean
        description: >
          Destroy the root device volume on instance termination
        required: false
        default: true
    attributes:
      public_dns:
        type: string
        description: Public DNS name assigned to the instance

  yorc.nodes.aws.PublicNetwork:
    derived_from: tosca.nodes.Network

  yorc.nodes.aws.EBSVolume:
    derived_from: tosca.nodes.BlockStorage
    properties:
      device:
        type: string
        description: >
          The device name to expose to the instance (for example, /dev/sdh or xvdh).
          See https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html#available-ec2-device-names for more information.
        required: true
      availability_zone:
        type: string
        description: The AZ where the EBS volume will exist.
        required: true
      encrypted:
        type: boolean
        description: If true, the disk will be encrypted. If no km_key_id is provied, one will be generated.
        required: false
      kms_key_id:
        type: string
        description: The ARN for the KMS encryption key. When specifying kms_key_id, encrypted will be always considered to be true.
        required: false
      volume_type:
        type: string
        description: >
          The type of EBS volume. Can be "standard", "gp2", "io1", "sc1" or "st1" (Default: "standard").
        required: false
      iops:
        type: string
        description: >
          IOPS (input/output operations per second) is a popular performance metric used to distinguish one storage type from another.
          Similar to device makers, AWS associates IOPS values to the volume component backing the storage option.
          As IOPS values increase, performance needs and costs rise.
        required: false
      tags:
        type: map
        description: A mapping of tags to assign to the resource.
        required: false
        entry_schema:
          type: string
      deletable:
        type: boolean
        description: should this volume be deleted at undeployment
        required: false
        default: false

  yorc.nodes.aws.Subnet:
    derived_from: tosca.nodes.Network
    # See : https://www.terraform.io/docs/providers/aws/r/subnet.html
    properties:
      availability_zone:
        type: string
        required: false
        description: The AZ for the subnet
      availability_zone_id:
        type: string
        required: false
        description: The AZ ID for the subnet
      cidr_block:
        type: string
        required: true
      ipv6_cidr_block :
        type: string
        required: false
        description: The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.
      map_public_ip_on_launch:
        type: boolean
        required: false
        description: Specify true to indicate that instances launched into the subnet should be assigned a public IP address. 
      assign_ipv6_address_on_creation:
        type: boolean
        required: false
        description: >
          Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address
      vpc_id:
        type: string
        required: true
      tags:
        type: map
        description: A mapping of tags to assign to the resource.
        required: false
        entry_schema:
          type: string

  yorc.nodes.aws.VPC:
    derived_from: tosca.nodes.Network
    # See https://www.terraform.io/docs/providers/aws/r/vpc.html
    properties:
      cidr_block:
        type: string
        required: true
      instance_tenancy:
        type: string
        description: >
          You can run instances in your VPC on single-tenant, dedicated hardware. 
          Select Dedicated to ensure that instances launched in this VPC are dedicated tenancy instances, regardless of the tenancy attribute specified at launch. 
          Select Default to ensure that instances launched in this VPC use the tenancy attribute specified at launch
        default: default
        constraints : 
          - valid_values: [default, dedicated]
      enable_dns_support:
        type: boolean
        description: A boolean flag to enable/disable DNS support in the VPC. Defaults true.
        default: true
        required: false
      enable_dns_hostnames:
        type: boolean
        default: false
        description : A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.
        required: false
      enable_classiclink:
        type: boolean
        default: false
        description: A boolean flag to enable/disable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic. 
        required: false
      enable_classiclink_dns_support:
        type: boolean
        required: false
        description: A boolean flag to enable/disable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic
      assign_generated_ipv6_cidr_block:
        type: boolean 
        required: false
        description: Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.
      tags:
        type: map
        description: A mapping of tags to assign to the resource.
        required: false
        entry_schema:
          type: string
      subnets:
        type: list
        description: Subnetworks in this VPC
        required: false
        entry_schema:
          type: yorc.datatypes.aws.SubnetType
      security_groups:
        type: list
        description: SecurityGroups in this VPC
        required: false
        entry_schema:
          type: yorc.datatypes.aws.SecurityGroupType



